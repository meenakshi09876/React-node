{"version":3,"file":"static/js/447.2748ec93.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.jsx","shared/components/FormElements/Input.jsx","shared/components/UIElements/Card.jsx","shared/hooks/form-hook.jsx","shared/util/validators.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport AuthContext from \"../../shared/context/auth-context\";\r\n\r\nconst DUMMY_PLACES = [\r\n  {\r\n    id: \"place1\",\r\n    title: \"Empire State Building\",\r\n    description: \"One of the most famous sky scrapers in the world!\",\r\n    imageUrl:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\r\n    address: \"20 W 34th St, New York, NY 10001\",\r\n    location: {\r\n      lat: 40.7484405,\r\n      lng: -73.9878584,\r\n    },\r\n    creator: \"user1\",\r\n  },\r\n  {\r\n    id: \"place2\",\r\n    title: \"Bengaluru Palace\",\r\n    description: \"One of the most famous Royal Palace in Bengauru\",\r\n    imageUrl:\r\n      \"https://lh3.googleusercontent.com/p/AF1QipNHvBtoADn3vXrixppCjv6seso2g07iqNJ-sbWS=s680-w680-h510\",\r\n    address: \"Vasanth Nagar, Bengaluru, Karnataka 560052\",\r\n    location: {\r\n      lat: 12.9984212,\r\n      lng: 77.590116,\r\n    },\r\n    creator: \"user1\",\r\n  },\r\n];\r\nfunction UpdatePlace() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n  const { placeId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  // const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      navigate(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n    // console.log(formState.inputs);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could Not Find the Place</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Plese enter a valid title\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Plese enter a valid description (at least 5 characters)\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UpdatePlace;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n      isTouched: false,\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        if={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n\r\nexport default useForm;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedPlace","setLoadedPlace","placeId","useParams","navigate","useNavigate","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchPlace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","sent","place","t0","stop","apply","arguments","placeUpdateSubmitHandler","_ref2","_callee2","e","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","userId","_x","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","inputReducer","state","action","_objectSpread","val","validate","isTouched","props","_useReducer","useReducer","_useReducer2","inputState","dispatch","changeHandler","event","target","touchHandler","placeholder","onChange","onBlur","if","rows","htmlFor","style","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","length","test","err","f"],"sourceRoot":""}