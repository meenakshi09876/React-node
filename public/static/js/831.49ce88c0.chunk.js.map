{"version":3,"file":"static/js/831.49ce88c0.chunk.js","mappings":"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","sources":["places/pages/NewPlaces.jsx","shared/components/FormElements/ImageUpload.jsx","shared/components/FormElements/Input.jsx","shared/hooks/form-hook.jsx","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport \"./PlaceForm.css\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport AuthContext from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction NewPlaces() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(formState.inputs); // send this to backend\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\"http://localhost:5000/api/places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      navigate(\"/\");\r\n    } catch {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Plese enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          type=\"text\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Plese enter a valid description (at least 5 characters)\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Plese enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please Upload an image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewPlaces;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n    // console.log(e.target);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n      isTouched: false,\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        if={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n\r\nexport default useForm;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","navigate","useNavigate","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","Authorization","token","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","e","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","if","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","f"],"sourceRoot":""}